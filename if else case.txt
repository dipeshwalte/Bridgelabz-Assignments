Sequences Practice Problems

1.	Use Random Function (( RANDOM )) to get Single Digit

#!/bin/bash -x
digit=$((RANDOM%10))
echo $digit

2. Use Random to get Dice Number between 1 to 6
	#!/bin/bash -x
digit=$((RANDOM%6+1))
echo $digit

3. Add two Random Dice Number and Print the Result
	#!/bin/bash -x
num1=$((RANDOM%6+1))
num2=$((RANDOM%6+1))
sum=$(($num1+$num2))
echo $sum
4. Write a program that reads 5 Random 2 Digit values , then find their sum and the average
	#!/bin/bash
sum=0
for((i=0;i<5;i++))
do
num=$((RANDOM%6+1))
echo number $i is $num
sum=$(($sum+$num))
done
avg=$(($sum/5))
echo sum is $sum
echo avg is $avg



5. Unit Conversion
a. 1ft = 12 in then 42 in = ? ft
b. Rectangular Plot of 60 feet x 40 feet in meters
c. Calculate area of 25 such plots in acres

#!/bin/bash
inches=42
inchconverted=`awk 'BEGIN{print '$inches'/12}'`
echo '1ft = 12 in then  42 in = '$inchconverted
plotAreaFt=$((60*40))
plotAreaMts=`awk 'BEGIN{print '$plotAreaFt'*0.3048}'`
echo 'Rectangular Plot of 60 feet x 40 feet in meters = '$plotAreaMts
plotAcres=`awk 'BEGIN{print 25*'$plotAreaMts'*0.000247105}'`
echo 'area of 25 such plots in acres = '$plotAcres

Selection Practice Problems with if & else

1. Write a program that reads 5 Random 3 Digit values and then outputs the minimum
and the maximum value
	#!/bin/bash
firstNum=$((RANDOM%900+100))
min=$firstNum
max=$firstNum
echo $firstNum
for((i=0;i<4;i++))
do
newNum=$((RANDOM%900+100))
echo $newNum
   if [ $min -gt $newNum ]
   then
      min=$newNum
   fi
   if [ $max -lt $newNum ]
   then
      max=$newNum
   fi
done
echo 'max='$max
echo 'min='$min

2. Write a program that takes day and month from the command line and prints true if
day of month is between March 20 and June 20, false otherwise.
	#!/bin/bash
echo Enter day of the month
read day
echo Enter Month
read month
if [ $month -eq 4 -a $day -ge 1 -a $day -le 30 ]
   then
      echo True
   elif [ $month -eq 5 -a $day -ge 1 -a $day -le 31 ]
   then
      echo True
   elif [ $month -eq 3 -a $day -ge 20 -a $day -le 31 ]
   then
      echo True
   elif [ $month -eq 6 -a $day -le 20 -a $day -gt 1 ]
   then
      echo True
   else
      echo False
fi









3. Write a program that takes a year as input and outputs the Year is a Leap Year or not
a Leap Year. A Leap Year checks for 4 Digit Number, Divisible by 4 and not 100 unless
divisible by 400.
	#!/bin/bash
echo Enter a year
read year
if [ $(($year%400)) -eq 0 ]
then
   echo $year is a leap year
elif [ $(($year%4)) -eq 0 ]
then
   if [ $(($year%100)) -eq 0 ]
   then
   echo $year is not a leap year
   else
   echo $year is a leap year
   fi
else
   echo $year is not a leap year
4. Write a program to simulate a coin flip and print out "Heads" or "Tails" accordingly.
	#!/bin/bash
if [ $((RANDOM%2)) -eq 0 ]
then
   echo 'heads'
else
   echo 'tails'
fi



















Selection Practice Problems with if, elif and else

1.	Read a single digit number and write the number in word

#!/bin/bash
echo Enter a single digit number
read num
if [ $num -eq 0 ]
then
   echo zero
elif [ $num -eq 1 ]
then
   echo one
elif [ $num -eq 2 ]
then
   echo two
elif [ $num -eq 3 ]
then
   echo three
elif [ $num -eq 4 ]
then
   echo four
elif [ $num -eq 5 ]
then
   echo five
elif [ $num -eq 6 ]
then
   echo six
elif [ $num -eq 7 ]
then
   echo seven
elif [ $num -eq 8 ]
then
   echo eight
elif [ $num -eq 9 ]
then
then
   echo nine
else
   echo You have not entered a single digit number
fi

2. Read a Number and Display the week day (Sunday, Monday,...)
	#!/bin/bash
echo Enter a number between 1 and 7
read num
if [ $num -eq 1 ]
then
   echo Monday
elif [ $num -eq 2 ]
then
   echo Tuesday
elif [ $num -eq 3 ]
then
   echo Wednesday
elif [ $num -eq 4 ]
then
   echo Thursday
elif [ $num -eq 5 ]
then
   echo Friday
elif [ $num -eq 6 ]
then
   echo Saturday
elif [ $num -eq 7 ]
then
   echo Sunday
else
   echo Enter correct number
fi

3. Read a Number 1, 10, 100, 1000, etc and display unit, ten, hundred,...
	#!/bin/bash
echo Enter a number 1,10,100,1000,10000
read num
if [ $num -eq 1 ]
then
   echo Units
elif [ $num -eq 10 ]
then
   echo Tens
elif [ $num -eq 100 ]
then
   echo Hundreds
elif [ $num -eq 1000 ]
then
   echo Thousand
elif [ $num -eq 10000 ]
then
   echo Ten Thousand
else
   echo Enter correct number
fi


















4. Enter 3 Numbers do following arithmetic operation and find the one that
is maximum and minimum
1. a + b * c 3. c + a / b
2. a % b + c 4. a * b + c
I used this logic, where a,b,c and d are the expressions
 
#!/bin/bash
echo Enter first num
read a
echo Enter second num
read b
echo Enter third num
read c
expr1=$(($a+$b*$c))
expr2=$(($c+$a/$b))
expr3=$(($a%$b+$c))
expr4=$(($a*$b+$c))
echo expr1 a+b*c is $expr1
echo expr2 c+a/b is $expr2
echo expr3 a%b+c is $expr3
echo expr4 a*b+c is $expr4
if [ $expr1 -gt $expr2 ]
then
   if [ $expr1 -gt $expr3 ]
   then
      if [ $expr1 -gt $expr4 ]
      then
         echo expr1 is the maximum
      else
         echo expr4 is the maximum
      fi
   elif [ $expr3 -gt $expr4 ]
      then
         echo expr3 is the maximum
   else
         echo expr4 is the maximum
   fi
elif  [ $expr2 -gt $expr3 ]
then
   if [ $expr2 -gt $expr4 ]
   then
      echo expr2 is the maximum
   else
else
      echo expr4 is the maximum
   fi
elif [ $expr3 -gt $expr4 ]
then
   echo expr3 is the maximum
else
   echo expr4 is the maximum
fi

# find minimum
if [ $expr1 -lt $expr2 ]
then
   if [ $expr1 -lt $expr3 ]
   then
      if [ $expr1 -lt $expr4 ]
      then
         echo expr1 is the minimum
      else
         echo expr4 is the minumum
      fi
   elif [ $expr3 -lt $expr4 ]
      then
         echo expr3 is the minimum
   else
         echo expr4 is the minimum
   fi
elif  [ $expr2 -lt $expr3 ]
then
   if [ $expr2 -lt $expr4 ]
   then
      echo expr2 is the minimum
   else
      echo expr4 is the minimum
   fi
elif [ $expr3 -lt $expr4 ]
then
   echo expr3 is the minimum
else
   echo expr4 is the minimum
fi








Selection Practice Problems with case statement

1. Read a single digit number and write the number in word using Case
	#!/bin/bash
echo Enter a number between 0 and 9
read num
case $num in
0)echo zero;;
1)echo one;;
2)echo two;;
3)echo three;;
4)echo four;;
5)echo five;;
6)echo six;;
7)echo seven;;
8)echo eight;;
9)echo nine;;
*)echo Enter correct number;;
esac

2. Read a Number and Display the week day (Sunday, Monday,...)
#!/bin/bash
echo Enter a number between 1 and 7
read num
case $num in
1)echo monday;;
2)echo tuesday;;
3)echo wednesday;;
4)echo thursday;;
5)echo friday;;
6)echo saturday;;
7)echo sunday;;
*)echo Enter correct number;;
esac

3. Read a Number 1, 10, 100, 1000, etc and display unit, ten, hundred,...
	#!/bin/bash
echo Enter a number between 1,10,100,1000,etc
read num
case $num in
1)echo Unit;;
10)echo Ten;;
100)echo Hundred;;
1000)echo Thousand;;
10000)echo Ten Thousand;;
100000)echo Lakh;;
*)echo Enter correct number;;
esac



4. Write a program that takes User Inputs and does Unit Conversion of
different Length units
1. Feet to Inch 3. Inch to Feet
2. Feet to Meter 4. Meter to Feet

#!/bin/bash
echo 'Choose what you want to do'
echo 1. Feet to Inch
echo 2. Feet to Meter
echo 3. Inch to Feet
echo 4. Meter to Feet
read num
case $num in
1)echo 'Enter num in feet'
   read input
   echo Output is $(($input*12));;
2)echo 'Enter num in feet'
   read input
   echo Output is `awk 'BEGIN {print '$input'*0.3048}'`;;
3)echo 'Enter num in Inch'
   read input
   echo Output is `awk 'BEGIN {print '$input'/12}'`;;
4)echo 'Enter num in Feet'
   read input
   echo Output is `awk 'BEGIN {print '$input'*3.28084}'`;;
*)echo 'Enter correct choice';;
esac

